// Code generated by goa v3.21.5, DO NOT EDIT.
//
// committee-service client
//
// Command:
// $ goa gen
// github.com/linuxfoundation/lfx-v2-committee-service/cmd/committee-api/design

package committeeservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "committee-service" service client.
type Client struct {
	CreateCommitteeEndpoint         goa.Endpoint
	GetCommitteeBaseEndpoint        goa.Endpoint
	UpdateCommitteeBaseEndpoint     goa.Endpoint
	DeleteCommitteeEndpoint         goa.Endpoint
	GetCommitteeSettingsEndpoint    goa.Endpoint
	UpdateCommitteeSettingsEndpoint goa.Endpoint
	ReadyzEndpoint                  goa.Endpoint
	LivezEndpoint                   goa.Endpoint
}

// NewClient initializes a "committee-service" service client given the
// endpoints.
func NewClient(createCommittee, getCommitteeBase, updateCommitteeBase, deleteCommittee, getCommitteeSettings, updateCommitteeSettings, readyz, livez goa.Endpoint) *Client {
	return &Client{
		CreateCommitteeEndpoint:         createCommittee,
		GetCommitteeBaseEndpoint:        getCommitteeBase,
		UpdateCommitteeBaseEndpoint:     updateCommitteeBase,
		DeleteCommitteeEndpoint:         deleteCommittee,
		GetCommitteeSettingsEndpoint:    getCommitteeSettings,
		UpdateCommitteeSettingsEndpoint: updateCommitteeSettings,
		ReadyzEndpoint:                  readyz,
		LivezEndpoint:                   livez,
	}
}

// CreateCommittee calls the "create-committee" endpoint of the
// "committee-service" service.
// CreateCommittee may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateCommittee(ctx context.Context, p *CreateCommitteePayload) (res *CommitteeFullWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.CreateCommitteeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommitteeFullWithReadonlyAttributes), nil
}

// GetCommitteeBase calls the "get-committee-base" endpoint of the
// "committee-service" service.
// GetCommitteeBase may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetCommitteeBase(ctx context.Context, p *GetCommitteeBasePayload) (res *GetCommitteeBaseResult, err error) {
	var ires any
	ires, err = c.GetCommitteeBaseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetCommitteeBaseResult), nil
}

// UpdateCommitteeBase calls the "update-committee-base" endpoint of the
// "committee-service" service.
// UpdateCommitteeBase may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateCommitteeBase(ctx context.Context, p *UpdateCommitteeBasePayload) (res *CommitteeBaseWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateCommitteeBaseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommitteeBaseWithReadonlyAttributes), nil
}

// DeleteCommittee calls the "delete-committee" endpoint of the
// "committee-service" service.
// DeleteCommittee may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteCommittee(ctx context.Context, p *DeleteCommitteePayload) (err error) {
	_, err = c.DeleteCommitteeEndpoint(ctx, p)
	return
}

// GetCommitteeSettings calls the "get-committee-settings" endpoint of the
// "committee-service" service.
// GetCommitteeSettings may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetCommitteeSettings(ctx context.Context, p *GetCommitteeSettingsPayload) (res *GetCommitteeSettingsResult, err error) {
	var ires any
	ires, err = c.GetCommitteeSettingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetCommitteeSettingsResult), nil
}

// UpdateCommitteeSettings calls the "update-committee-settings" endpoint of
// the "committee-service" service.
// UpdateCommitteeSettings may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateCommitteeSettings(ctx context.Context, p *UpdateCommitteeSettingsPayload) (res *CommitteeSettingsWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateCommitteeSettingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommitteeSettingsWithReadonlyAttributes), nil
}

// Readyz calls the "readyz" endpoint of the "committee-service" service.
// Readyz may return the following errors:
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) Readyz(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.ReadyzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Livez calls the "livez" endpoint of the "committee-service" service.
func (c *Client) Livez(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
